#!/usr/bin/env perl
# Simple Template Daguerreotype 
#
# Author: briancoca+std@gmail.com, Copyright 2011 Brian Coca
# License: GNU General Public License v2 http:http://www.gnu.org/licenses/gpl-2.0.html
#
# tiny templating system for those that just need variable substitution
# templates just need [% keyword %] which will be substituted wiht the 
# contents of the VD file. Uses perl cause only gawk supports inline ref
# for substitution.
use strict;
use warnings;

my $data = shift;
my $template = shift;
my $output = shift;

my $myvars; #TODO: use tie'd hash instead of slupring into RAM
if ( $data and $data !~ /-/) { 
  $myvars = {};
  open VD, "<",$data or die("Error while opening $data");
  while(<VD>) {
      if (/^(\w+)=(.*)$/) {
        $myvars->{$1} = $2;
      }
  }
  close VD or die("Error while closing $data");
}
else {
  $myvars = \%ENV;
}

# redirect ST outputs if i have params.
if ($template and $template !~ /-/) {
  open STDIN, "<", $template or die("Error while opening $template");
}
if ($output and $output !~ /-/) {
  open STDOUT, ">", $output or die("Error while opening $output");
}

# uses $_ magic. and does most all of the work
while(<STDIN>){
  no warnings qw{ uninitialized };
  s/\[% (\w+) %\]/$myvars->{$1}/g or warn ("Didn't match $1, leaving empty");
  print $_;
}
